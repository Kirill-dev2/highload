version: '3.8'
services:
  db-master:
    image: postgres:16-alpine
    container_name: db-master
    volumes:
      - master:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"

  db-slave-1:
    image: postgres:16-alpine
    container_name: db-slave-1
    volumes:
      - slave:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "5433:5432"
    depends_on:
      - db-master

  db-slave-2:
    image: postgres:16-alpine
    container_name: db-slave-2
    volumes:
      - slave-2:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "5434:5432"
    depends_on:
      - db-master

  haproxy:
    image: haproxy:lts-alpine3.20
    container_name: haproxy
    volumes:
      - ./09-load-balancer/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "5488:5488"
    depends_on:
      - db-master
      - db-slave-1
      - db-slave-2

  redis:
    image: redis:7.2.4-alpine3.19
    container_name: redis-cache
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

  rabbitmq:
    image: rabbitmq:3.13.1-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "61613:61613"
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  sharding-master:
    container_name: sharding-master
    image: "citusdata/citus:12.1.3"
    ports: ["5435:5432"]
    labels: ["com.citusdata.role=Master"]
    environment: &AUTH
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      PGUSER: postgres
      PGPASSWORD: mysecretpassword
      POSTGRES_HOST_AUTH_METHOD: trust

  sharding-worker-1:
    image: "citusdata/citus:12.1.3"
    container_name: sharding-worker-1
    labels: ["com.citusdata.role=Worker"]
    depends_on:
      - sharding-manager
    environment: *AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck

  sharding-worker-2:
    image: "citusdata/citus:12.1.3"
    container_name: sharding-worker-2
    labels: [ "com.citusdata.role=Worker" ]
    depends_on:
      - sharding-manager
    environment: *AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck

  sharding-manager:
    container_name: sharding-manager
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - healthcheck-volume:/healthcheck
      - sharding-manager:/var/lib/postgresql/data
    depends_on:
      - sharding-master
    environment:
      CITUS_HOST: sharding-master
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      PGUSER: postgres
      PGPASSWORD: mysecretpassword
      POSTGRES_HOST_AUTH_METHOD: trust

  tarantool:
    image: tarantool/tarantool:3.1.0
    container_name: tarantool
    ports:
      - 3301:3301
    volumes:
      - ./06-in-memory-db/tarantool/conf/tarantool_init.lua:/opt/tarantool/init.lua
      - tarantool:/var/lib/tarantool

  chat-service:
    image: highload-chat:1.0.0
    container_name: highload-chat
    build:
      context: .
      dockerfile: chat/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - sharding-master
      - sharding-manager
      - sharding-worker-1
      - sharding-worker-2
    environment:
      - SERVER_PORT=8081
      - SHARDING_URL=jdbc:postgresql://sharding-master/postgres

  core-service-1:
    image: highload-core:1.0.1
    container_name: core-1
    build:
      context: .
      dockerfile: core/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - db-master
      - db-slave-1
      - db-slave-2
      - redis
      - rabbitmq
      - chat-service
    environment:
      - SERVER_PORT=8082
      - SPRING_PROFILES_ACTIVE=default
      - DB_MASTER_URL=jdbc:postgresql://db-master/postgres
      - DB_SLAVE_URL=jdbc:postgresql://haproxy:5488/postgres
      - REDIS_HOST=redis-cache
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_PORT=61613
      - DIALOG_SERVICE=chat-service:8081

  core-service-2:
    image: highload-core:1.0.1
    container_name: core-2
    build:
      context: .
      dockerfile: core/Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - db-master
      - db-slave-1
      - db-slave-2
      - redis
      - rabbitmq
      - chat-service
    environment:
      - SERVER_PORT=8083
      - SPRING_PROFILES_ACTIVE=default
      - DB_MASTER_URL=jdbc:postgresql://db-master/postgres
      - DB_SLAVE_URL=jdbc:postgresql://haproxy:5488/postgres
      - REDIS_HOST=redis-cache
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_PORT=61613
      - DIALOG_SERVICE=chat-service:8081

  nginx:
    image: nginx:1.27.0-alpine3.19-perl
    container_name: nginx
    ports:
      - 8080:8080
    depends_on:
      - core-service-1
      - core-service-2
    volumes:
      - ./09-load-balancer/nginx/nginx.conf:/etc/nginx/templates/default.conf.template
    environment:
      - CORE_SERVICE_1=core-service-1:8082
      - CORE_SERVICE_2=core-service-2:8083

volumes:
  master:
  slave:
  slave-2:
  redis:
  rabbitmq:
  sharding-manager:
  healthcheck-volume:
  tarantool:

networks:
  default:
    ipam:
      config:
        - subnet: 192.168.192.0/20