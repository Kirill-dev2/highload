version: '3.8'
services:
  db-counter-master:
    image: postgres:16-alpine
    container_name: db-counter-master
    volumes:
      - db-counter-master:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
    ports:
      - "5536:5432"

  db-counter-slave:
    image: postgres:16-alpine
    container_name: db-counter-slave
    volumes:
      - db-counter-slave:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
    ports:
      - "5537:5432"

  db-master:
    image: postgres:16-alpine
    container_name: db-master
    volumes:
      - master:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"

  db-slave-1:
    image: postgres:16-alpine
    container_name: db-slave-1
    volumes:
      - slave:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "5433:5432"
    depends_on:
      - db-master

  db-slave-2:
    image: postgres:16-alpine
    container_name: db-slave-2
    volumes:
      - slave-2:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "5434:5432"
    depends_on:
      - db-master

  haproxy:
    image: haproxy:lts-alpine3.20
    container_name: haproxy
    volumes:
      - ./09-load-balancer/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "5488:5488"
    depends_on:
      - db-master
      - db-slave-1
      - db-slave-2

  redis:
    image: redis:7.2.4-alpine3.19
    container_name: redis-cache
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

  rabbitmq:
    image: rabbitmq:3.13.1-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "61613:61613"
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  sharding-master:
    container_name: sharding-master
    image: "citusdata/citus:12.1.3"
    ports: ["5435:5432"]
    labels: ["com.citusdata.role=Master"]
    environment: &AUTH
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      PGUSER: postgres
      PGPASSWORD: mysecretpassword
      POSTGRES_HOST_AUTH_METHOD: trust

  sharding-worker-1:
    image: "citusdata/citus:12.1.3"
    container_name: sharding-worker-1
    labels: ["com.citusdata.role=Worker"]
    depends_on:
      - sharding-manager
    environment: *AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck

  sharding-worker-2:
    image: "citusdata/citus:12.1.3"
    container_name: sharding-worker-2
    labels: [ "com.citusdata.role=Worker" ]
    depends_on:
      - sharding-manager
    environment: *AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck

  sharding-manager:
    container_name: sharding-manager
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - healthcheck-volume:/healthcheck
      - sharding-manager:/var/lib/postgresql/data
    depends_on:
      - sharding-master
    environment:
      CITUS_HOST: sharding-master
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      PGUSER: postgres
      PGPASSWORD: mysecretpassword
      POSTGRES_HOST_AUTH_METHOD: trust

  tarantool:
    image: tarantool/tarantool:3.1.0
    container_name: tarantool
    ports:
      - 3301:3301
    volumes:
      - ./06-in-memory-db/tarantool/conf/tarantool_init.lua:/opt/tarantool/init.lua
      - tarantool:/var/lib/tarantool

  counter-service:
    image: highload-counter:1.0.1
    container_name: counter-service
    build:
      context: .
      dockerfile: service-counter/Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - db-counter-master
      - db-counter-slave
    environment:
      - SERVER_PORT=8084
      - DB_COUNTER_MASTER_URL=jdbc:postgresql://db-counter-master/postgres
      - DB_COUNTER_SLAVE_URL=jdbc:postgresql://db-counter-master/postgres

  chat-service:
    image: highload-chat:1.1.0
    container_name: chat-service
    build:
      context: .
      dockerfile: service-chat/Dockerfile
    ports:
      - "8081:8081"
      - "12345:12345"
    depends_on:
      - sharding-master
      - sharding-manager
      - sharding-worker-1
      - sharding-worker-2
      - counter-service
    environment:
      JAVA_TOOL_OPTIONS: >
        -Djava.rmi.server.hostname=192.168.192.23
        -Dcom.sun.management.jmxremote.host=0.0.0.0
        -Dcom.sun.management.jmxremote=true
        -Dcom.sun.management.jmxremote.port=12345
        -Dcom.sun.management.jmxremote.rmi.port=12345
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
      SERVER_PORT: 8081
      SHARDING_URL: jdbc:postgresql://sharding-master/postgres

  core-service-1:
    image: highload-core:1.0.3
    container_name: core-service-1
    build:
      context: .
      dockerfile: service-core/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - db-master
      - db-slave-1
      - db-slave-2
      - redis
      - rabbitmq
      - chat-service
      - counter-service
    environment:
      - SERVER_PORT=8082
      - SPRING_PROFILES_ACTIVE=default
      - DB_MASTER_URL=jdbc:postgresql://db-master/postgres
      - DB_SLAVE_URL=jdbc:postgresql://haproxy:5488/postgres
      - REDIS_HOST=redis-cache
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_PORT=61613
      - DIALOG_SERVICE=chat-service:8081
      - COUNTER_SERVICE=counter-service:8084

  core-service-2:
    image: highload-core:1.0.3
    container_name: core-service-2
    build:
      context: .
      dockerfile: service-core/Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - db-master
      - db-slave-1
      - db-slave-2
      - redis
      - rabbitmq
      - chat-service
      - counter-service
    environment:
      - SERVER_PORT=8083
      - SPRING_PROFILES_ACTIVE=default
      - DB_MASTER_URL=jdbc:postgresql://db-master/postgres
      - DB_SLAVE_URL=jdbc:postgresql://haproxy:5488/postgres
      - REDIS_HOST=redis-cache
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_PORT=61613
      - DIALOG_SERVICE=chat-service:8081

  nginx:
    image: nginx:1.27.0-alpine3.19-perl
    container_name: nginx
    ports:
      - 8080:8080
    depends_on:
      - core-service-1
      - core-service-2
    volumes:
      - ./09-load-balancer/nginx/nginx.conf:/etc/nginx/templates/default.conf.template
    environment:
      - CORE_SERVICE_1=core-service-1:8082
      - CORE_SERVICE_2=core-service-2:8083

  zabbix-db:
    image: postgres:16-alpine
    container_name: zabbix-db
    environment:
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_pwd
      POSTGRES_DB: zabbix
    ports:
      - "5555:5432"
    volumes:
      - zabbix-db:/var/lib/postgresql/data

  zabbix-java-gateway:
    image: zabbix/zabbix-java-gateway:alpine-7.0-latest
    container_name: zabbix-java-gateway
    depends_on:
      - zabbix-db

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:alpine-7.0-latest
    container_name: zabbix-server
    environment:
      DB_SERVER_HOST: zabbix-db
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_pwd
      POSTGRES_DB: zabbix
      ZBX_JAVAGATEWAY: zabbix-java-gateway
      ZBX_JAVAGATEWAY_ENABLE: true
    depends_on:
      - zabbix-java-gateway
      - zabbix-db
    ports:
      - "10051:10051"
      - "10060:10050"
    volumes:
      - zabbix-server:/usr/lib/zabbix/alertscripts

  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-7.0-latest
    container_name: zabbix-web
    environment:
      DB_SERVER_HOST: zabbix-db
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_pwd
      POSTGRES_DB: zabbix
      PHP_TZ: Europe/Moscow
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10051
    depends_on:
      - zabbix-server
    ports:
      - "9999:8080"

  zabbix-agent:
    image: zabbix/zabbix-agent:alpine-7.0-latest
    container_name: zabbix-agent
    environment:
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10060
      ZBX_HOSTNAME: zabbix-agent
      ZBX_HOSTNAMEITEM: system.hostname
    depends_on:
      - zabbix-db
      - zabbix-server
    ports:
      - "10050:10050"

  grafana:
    image: grafana/grafana:11.1.0
    container_name: grafana
    volumes:
      - grafana:/var/lib/grafana
      - ./11-monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-clock-panel 1.0.1,grafana-simple-json-datasource,alexanderzobnin-zabbix-app
    ports:
      - "3000:3000"

  cadvisor:
    image: google/cadvisor:v0.33.0
    container_name: cadvisor
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    ports:
      - '9898:8080'

  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./11-monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=1d'
    depends_on:
      - cadvisor

  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: prom-node-exporter
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    depends_on:
      - prometheus

volumes:
  master:
  slave:
  slave-2:
  redis:
  rabbitmq:
  sharding-manager:
  healthcheck-volume:
  tarantool:
  db-counter-master:
  db-counter-slave:
  zabbix-db:
  zabbix-server:
  grafana:
  prometheus_data:

networks:
  default:
    ipam:
      config:
        - subnet: 192.168.192.0/20